/*
2017-09-18  1.0.0                   Autogenerated           WI#216104/WI#21702
Initial Version      
2020-12-29  Dev/1.0.ExtendedBucket  Anupam                  WI#446747/TI#459717
Done changes in the proc to adopt dynamic parameter for PlayerId, PropertyId and CreatedBY
2021-08-19  Dev/1.0.ExtendedBuckets   Nikita Kapoor           WI#552726/WI#552251
Replaced UserName with UserID
2021-09-03  Dev/1.0.ExtendedBuckets     Himanshu Verma  WI#548031/WI#557360
Added logic for Time Zone Conversion and filtering.
2021-09-24     Release/2.0.1000    Deepak Dwij        WI#560993/WI#561458
Fixed Proc for query improvemnt, and Joins, Returned FirstName, LastName
*/

CREATE OR ALTER PROCEDURE dbo.usp_UC_RPT_PlayerEnrollmentDetail
  @FromDate datetime, @ToDate datetime, @PlayerID varchar(MAX) = NULL,
  @PropertyID varchar(MAX) = NULL, @CreatedBy varchar(MAX) = NULL,
  @TZ nvarchar(8)
AS
BEGIN
  SET NOCOUNT ON;
  BEGIN TRY

    DECLARE @PropertyTable TABLE (ID bigint PRIMARY KEY);
    DECLARE @UserTable TABLE (CreatedBy varchar(30) PRIMARY KEY);
    DECLARE @PlayerTable TABLE (PlayerID varchar(30) PRIMARY KEY);
    DECLARE @UniversalTimeZone nvarchar(64), @TimeZone nvarchar(64);

    IF @PropertyID IS NOT NULL
    BEGIN
      INSERT INTO @PropertyTable (ID)
      SELECT [value] FROM STRING_SPLIT(@PropertyID, ',');
    END;

    IF @CreatedBy IS NOT NULL
    BEGIN
      INSERT INTO @UserTable (CreatedBy)
      SELECT [value] FROM STRING_SPLIT(@CreatedBy, ',');
    END;

    IF @PlayerID IS NOT NULL
    BEGIN
      INSERT INTO @PlayerTable (PlayerID)
      SELECT [value] FROM STRING_SPLIT(@PlayerID, ',');
    END;

    SELECT @TimeZone = UXT.StandardName
    FROM dbo.UC_X_Timezones AS UXT
    WHERE UXT.StandardAbbreviation = @TZ
      OR UXT.DaylightAbbreviation = @TZ;

    IF @TimeZone IS NULL
      SELECT @TimeZone = UXP.TimeZone
      FROM dbo.UC_X_Property AS UXP
        INNER JOIN dbo.UC_X_Host h ON h.PropertyID = UXP.PropertyID
      WHERE h.IsUniverse = 1;

    SELECT @UniversalTimeZone = UXP.TimeZone
    FROM dbo.UC_X_Property AS UXP
      INNER JOIN dbo.UC_X_Host h ON UXP.PropertyID = h.PropertyID
    WHERE h.IsUniverse = 1;

    SELECT @FromDate = dbo.fn_ConvertDTOToLocalDatetime(
                                                       @FromDate AT TIME ZONE @TimeZone,
                                                       @UniversalTimeZone
                                                       ),
      @ToDate = dbo.fn_ConvertDTOToLocalDatetime(
                                                @ToDate AT TIME ZONE @TimeZone,
                                                @UniversalTimeZone
                                                );

    SELECT dbo.fn_ConvertDTOToLocalDatetime(
                                           P.CreatedDate AT TIME ZONE @UniversalTimeZone,
                                           @TimeZone
                                           ) EnrolllmentDate,
      P.UniversalPlayerID PlayerID, P.FirstName, P.LastName,
      pro.PropertyName Property, pc.PrintCount CardPrinted,
      P.CreatedBy EnrolledBy
    FROM dbo.UC_PL_Player P WITH (NOLOCK)
      INNER JOIN dbo.UC_X_Property pro WITH (NOLOCK) ON pro.PropertyID = P.EnrollmentPropertyId
      INNER JOIN dbo.UC_X_UserLogin u WITH (NOLOCK) ON u.UserName = P.CreatedBy
      LEFT JOIN dbo.UC_PL_Card pc WITH (NOLOCK) ON pc.PlayerID = P.PlayerID
    WHERE p.CreatedDate >= @FromDate
      AND p.CreatedDate <= @ToDate
      AND
      (
        @PlayerID IS NULL
        OR EXISTS (SELECT 1 FROM @PlayerTable pl WHERE P.UniversalPlayerID = pl.PlayerID)
      )
      AND
      (
        @PropertyID IS NULL
        OR EXISTS (SELECT 1 FROM @PropertyTable pt WHERE pt.ID = P.EnrollmentPropertyId)
      )
      AND
      (
        @CreatedBy IS NULL
        OR EXISTS (SELECT 1 FROM @UserTable ut WHERE ut.CreatedBy = u.UserID)
      )
    OPTION (RECOMPILE);

  END TRY
  BEGIN CATCH
    THROW;
  END CATCH;
END;

GO
